<?xml version="1.0" encoding="UTF-8"?>
<widget>
<info>

	<PluginName>Paypal</PluginName>
	<PluginVersion>1.4.1</PluginVersion>
	<ApplicationVersion>2.7.9</ApplicationVersion>
</info>

<dict>
<item>
	<key>Plugin Name</key>
	<string>Paypal</string>
</item>
<item>	
	<key>DefaultWidth</key>
	<integer>107</integer>
</item>
<item>	
	<key>DefaultHeight</key>
	<integer>50</integer>
</item>
<item>	
	<key>UniqueHeadCode</key>
	<string>TRUE</string>
</item>
<item>
	<key>HeadCode</key>
	<string>
	<![CDATA[<script type="text/javascript">
		<!--
		function getContinueShoppingURL(form){
			form.shopping_url.value = window.location.href;
		}
		//-->
	</script>]]>
	</string>
</item>
<item>
	<key>cssCode</key>
	<string>
	<![CDATA[form.ppOrderForm_{!-SHAPEINDEX-!} {color:{!-%FontColor-!};font-family:{!-%FontName-!};font-size:{!-%FontSize-!}px;text-align:{!-plppFormAlignment-!} }]]>
	</string>
</item>


<item>
	<key>HTMLCode</key>
	<string>
	<![CDATA[<!--{!-$WIDTH-!}-->
<div style="width:100%;text-align:{!-plppFormAlignment-!}">
{!-plppUseCustomProductImage(TRUE)//<img src="{!-plppImageFileUUID-!}" style="width:{!-$WIDTH-!}px;height:auto">//plppUseCustomProductImage-!}
{!-plppUseCustomProductDescription(TRUE)//{!-plppProductDescription-!}//plppUseCustomProductDescription-!}

<form class="ew_pp ppOrderForm_{!-SHAPEINDEX-!}" id="ppOrderForm_{!-SHAPEINDEX-!}" action="https://www.paypal.com/cgi-bin/webscr" method="post" target="{!-plppOpenInNewWindow(TRUE)//paypal//plppOpenInNewWindow-!}{!-plppOpenInNewWindow(FALSE)//_self//plppOpenInNewWindow-!}">

<input type="hidden" name="business" value="{!-plppEmailAddress-!}">
{!-plppCountry-!}
<input type="hidden" name="currency_code" value="{!-plppCurrency-!}">
<input type="hidden" name="button_subtype" value="{!-plppButtonSubType-!}">
<input type="hidden" name="no_note" value="0">
{!-plppPageThankYouReturn-!}
{!-plppPageCancelReturn-!}

<input type="hidden" name="shopping_url" value="#">
{!-plppProductOptionsPrices-!}
{!-plppProductOptions-!}

{!-plppProductOptionSpecifyQuantity(TRUE)//{!-plppProductOptionQuantityFieldName-!}<br /><input type="text" name="quantity" size="6" value=""><br /><br />//plppProductOptionSpecifyQuantity-!}

{!-plppButtonType(Buy Now)//
<input type="hidden" name="tax_rate" value="{!-plppTaxRate-!}">
{!-plppGlobalShipping(FALSE)//<input type="hidden" name="shipping" value="{!-plppShipping-!}">//plppGlobalShipping-!}
<input type="hidden" name="item_name" value="{!-plppItemName-!}">
<input type="hidden" name="item_number" value="{!-plppItemID-!}">
<input type="hidden" name="amount" value="{!-plppPrice-!}">
<input type="hidden" name="weight" value="{!-plppProductWeight-!}">
<input type="hidden" name="weight_unit" value="{!-plppProductWeightMes-!}">
<input type="hidden" name="cmd" value="_xclick">
<input type="hidden" name="bn" value="RageSoftware_SP">
{!-plppUseCustomImage(FALSE)//<input onclick=getContinueShoppingURL(this.form) type="image" src="https://www.paypalobjects.com/webstatic/en_US/i/btn/png/btn_buynow_107x26.png" name="submit" alt="Buy Now"/>//plppUseCustomImage-!}
{!-plppUseCustomImage(TRUE)//<input onclick=getContinueShoppingURL(this.form) type="image" src="{!-plppCustomButtonImage-!}" border="0" name="submit" width="{!-plppCustomButtonImageWidth-!}" height="{!-plppCustomButtonImageHeight-!}" alt="Buy Now"/>//plppUseCustomImage-!}
<img alt="" border="0" src="https://www.paypalobjects.com/en_US/i/scr/pixel.gif" width="1" height="1">
//plppButtonType-!}

{!-plppButtonType(Donate)//
<input type="hidden" name="tax_rate" value="{!-plppTaxRate-!}">
<input type="hidden" name="item_name" value="{!-plppItemName-!}">
<input type="hidden" name="item_number" value="{!-plppItemID-!}">
<input type="hidden" name="amount" value="{!-plppPrice-!}">
<input type="hidden" name="cmd" value="_xclick">
<input type="hidden" name="bn" value="RageSoftware_SP">
{!-plppUseCustomImage(FALSE)//<input onclick=getContinueShoppingURL(this.form) type="image" src="https://www.paypalobjects.com/webstatic/en_US/i/btn/png/btn_donate_92x26.png" name="submit" alt="Donate"/>//plppUseCustomImage-!}
{!-plppUseCustomImage(TRUE)//<input onclick=getContinueShoppingURL(this.form) type="image" src="{!-plppCustomButtonImage-!}" border="0" name="submit" width="{!-plppCustomButtonImageWidth-!}" height="{!-plppCustomButtonImageHeight-!}" alt="Donate"/>//plppUseCustomImage-!}
<img alt="" border="0" src="https://www.paypalobjects.com/en_US/i/scr/pixel.gif" width="1" height="1">
//plppButtonType-!}

{!-plppButtonType(Add to Shopping Cart)//
<input type="hidden" name="tax_rate" value="{!-plppTaxRate-!}">
{!-plppGlobalShipping(FALSE)//<input type="hidden" name="shipping" value="{!-plppShipping-!}">//plppGlobalShipping-!}
<input type="hidden" name="item_name" value="{!-plppItemName-!}">
<input type="hidden" name="item_number" value="{!-plppItemID-!}">
<input type="hidden" name="amount" value="{!-plppPrice-!}">
<input type="hidden" name="add" value="1">
<input type="hidden" name="weight" value="{!-plppProductWeight-!}">
<input type="hidden" name="weight_unit" value="{!-plppProductWeightMes-!}">
<input type="hidden" name="cmd" value="_cart">
<input type="hidden" name="bn" value="RageSoftware_SP">
{!-plppUseCustomImage(FALSE)//<input onclick=getContinueShoppingURL(this.form) type="image" src="https://www.paypalobjects.com/webstatic/en_US/i/btn/png/btn_addtocart_120x26.png" border="0" name="submit" alt="Add To Cart">//plppUseCustomImage-!}
{!-plppUseCustomImage(TRUE)//<input onclick=getContinueShoppingURL(this.form) type="image" src="{!-plppCustomButtonImage-!}" border="0" name="submit" width="{!-plppCustomButtonImageWidth-!}" height="{!-plppCustomButtonImageHeight-!}" alt="Add To Cart"/>//plppUseCustomImage-!}
<img alt="" border="0" src="https://www.paypalobjects.com/en_US/i/scr/pixel.gif" width="1" height="1">
//plppButtonType-!}

{!-plppButtonType(View Cart)//
<input type="hidden" name="cmd" value="_cart">
<input type="hidden" name="display" value="1">
<input type="hidden" name="bn" value="RageSoftware_SP">
{!-plppUseCustomImage(FALSE)//<input onclick=getContinueShoppingURL(this.form) type="image" src="https://www.paypalobjects.com/webstatic/en_US/i/btn/png/btn_viewcart_113x26.png" border="0" name="submit" alt="View Cart">//plppUseCustomImage-!}
{!-plppUseCustomImage(TRUE)//<input onclick=getContinueShoppingURL(this.form) type="image" src="{!-plppCustomButtonImage-!}" border="0" name="submit" width="{!-plppCustomButtonImageWidth-!}" height="{!-plppCustomButtonImageHeight-!}" alt="View Cart"/>//plppUseCustomImage-!}
<img alt="" border="0" src="https://www.paypalobjects.com/en_US/i/scr/pixel.gif" width="1" height="1">

//plppButtonType-!}
</form>
</div>

	]]>
	</string>
</item>


</dict>

<options>

   

    <option>
  		<optionName>plppEmailAddress</optionName>
  		<displayName>Email Address</displayName>
  		<defaultValue>your@paypalemail.com</defaultValue>
  		<optionDescription>Email address to send the money too</optionDescription>
  		<controlType>1</controlType>
  		<ControlWidth>155</ControlWidth>
  		<value>**N/A**</value>
  	</option>
  	
  	<option>
  		<optionName>plppButtonType</optionName>
  		<displayName>Button Type</displayName>
  		<defaultValue>Buy Now</defaultValue>
  		<optionDescription>Add to Shopping Cart|Buy Now|View Cart|Donate</optionDescription>
  		<controlType>3</controlType>
  		<ControlWidth>155</ControlWidth>
  		<value>**N/A**</value>
  	</option>
  	
  	<option>
  		<optionName>plppButtonSubType</optionName>
  		<displayName>Button Sub Type</displayName>
  		<defaultValue>Buy Now</defaultValue>
  		<optionDescription>product|service</optionDescription>
  		<controlType>3</controlType>
  		<ControlWidth>155</ControlWidth>
  		<value>**N/A**</value>
  	</option>


	 <option>
  		<optionName>plppItemName</optionName>
  		<displayName>Item Name</displayName>
  		<defaultValue></defaultValue>
  		<optionDescription>Enter name of product</optionDescription>
  		<controlType>1</controlType>
  		<ControlWidth>155</ControlWidth>
  		<value>**N/A**</value>
  	</option>
  	
  	<option>
  		<optionName>plppItemID</optionName>
  		<displayName>Item ID</displayName>
  		<defaultValue></defaultValue>
  		<optionDescription>Unique ID for tracking</optionDescription>
  		<controlType>1</controlType>
  		<ControlWidth>155</ControlWidth>
  		<value>**N/A**</value>
  	</option>
  	
  	<option>
  		<optionName>plppPrice</optionName>
  		<displayName>Price</displayName>
  		<defaultValue>50.00</defaultValue>
  		<optionDescription>50.00</optionDescription>
  		<controlType>1</controlType>
  		<ControlWidth>80</ControlWidth>
  		<value>**N/A**</value>
  		<processingCode><![CDATA[
  		 
  		Dim Name As String
  		Dim Value As String
		Dim rowText as String
  		
  		name=Input("dictVariableName")
		value=Input("dictVariableValue")
  		rowText=Input("dictcode")
  		If value = "" then
  			value = "0"
  		end
		print rowText.replaceall("{!-"+name+"-!}",value)

  		 
  		 ]]></processingCode>
  		
  	</option>

	<option>
  		<optionName>plppCurrency</optionName>
  		<displayName>Currency</displayName>
  		<defaultValue>0</defaultValue>
  		<optionDescription>USD|AUD|BRL|GBP|CAD|CZK|DKK|EUR|HKD|HUF|ILS|JPY|MXN|TWD|NZD|NOK|PHP|PLN|RUB|SGD|SEK|CHF|THB</optionDescription>
  		<controlType>3</controlType>
  		<ControlWidth>155</ControlWidth>
  		<value>**N/A**</value>
  	</option>
  	
  	<option>
  		<optionName>plppCountry</optionName>
  		<displayName>Country</displayName>
  		<defaultValue>0</defaultValue>
  		<optionDescription>Default|Australia|Austria|Belgium|Brazil|Canada|China|Hong Kong|Denmark|Germany|Indonesia|France|Italy|Japan|Lithuania|Latvia|Netherlands|Norway|Poland|Portugal|Russia|Spain|Sweden|Switzerland|Taiwan|Thailand|Turkey|Ukraine|United Kingdom|United States</optionDescription>
  		<controlType>3</controlType>
  		<ControlWidth>155</ControlWidth>
  		<value>**N/A**</value>
  		
  		<processingCode><![CDATA[
  		
  		Dim Name As String
  		Dim Value As String
  		Dim rowText As String
  		Dim sResult As String
  		
  		name=Input("dictVariableName")
		value=Input("dictVariableValue")
		rowText=Input("dictcode")
  		
Select Case Value
Case "Default"
  	sResult = ""
Case "Australia"
	sResult = "AU"
Case "Austria"
	sResult = "AT"
Case "Belgium"
	sResult = "BE"
Case "Brazil"
	sResult = "BR"
Case "Denmark"
	sResult = "da_DK"
Case "Canada"
	sResult = "CA"
Case "China"
	sResult = "CN"
Case "France"
	sResult = "FR"
Case "Germany"
	sResult = "DE"
Case "Hong Kong"
	sResult = "zh_HK"
Case "Indonesia"
	sResult = "id_ID"
Case "Italy"
	sResult = "IT"
Case "Japan"
	sResult = "ja_JP"
Case "Lithuania"
	sResult = "ru_RU"
Case "Latvia"
	sResult = "ru_RU"
Case "Norway"
	sResult = "no_NO"
Case "Netherlands"
	sResult = "NL"
Case "Poland"
	sResult = "PL"
Case "Portugal"
	sResult = "PT"
Case "Russia"
	sResult = "RU"
Case "Spain"
	sResult = "ES"
Case "Sweden"
	sResult = "sv_SE"
Case "Switzerland"
	sResult = "CH"
Case "Thailand"
	sResult = "th_TH"
Case "Turkey"
	sResult = "tr_TR"
Case "Taiwan"
	sResult = "zh_TW"
Case "United Kingdom"
	sResult = "GB"
Case "United States"
	sResult = "US"
Case "Ukraine"
	sResult = "ru_RU"
End Select

if sResult.lenb > 0 then
 print rowText.ReplaceAll("{!-"+name+"-!}","<input type=""hidden"" name=""lc"" value="""+sResult+""">")
else
 print rowText.replaceall("{!-"+name+"-!}","")
end




  		
  		
  		
  		]]></processingCode>  
  	</option>
  	
  	  <option>
  		<optionName>plppGlobalShipping</optionName>
  		<displayName>Use Global Shipping Settings</displayName>
  		<defaultValue>FALSE</defaultValue>
  		<optionDescription>Use shipping values set in Paypal account</optionDescription>
  		<controlType>4</controlType>
  		<ControlWidth>200</ControlWidth>
  		<value>**N/A**</value>
  		<Event_Action><![CDATA[
  		 
  		 Dim bValue As String = Input("$value")
  		 
  		 if bValue = "FALSE" then
  		 	SetControlEnable("plppShipping", TRUE)
  		 else 
  		 	SetControlEnable("plppShipping", FALSE)
  		 end
  		 
  		 ]]></Event_Action>
  	</option>
  	
  	<option>
  		<optionName>plppShipping</optionName>
  		<displayName>Shipping</displayName>
  		<defaultValue>5.00</defaultValue>
  		<optionDescription>5.00</optionDescription>
  		<controlType>1</controlType>
  		<ControlWidth>80</ControlWidth>
  		<value>**N/A**</value>
  		  		<processingCode><![CDATA[
  		
  		

	
  		]]></processingCode>  
  	</option>
  	
  		<option>
  		<optionName>plppShippingAddress</optionName>
  		<displayName>Shipping Req.</displayName>
  		<defaultValue>0</defaultValue>
  		<optionDescription>Prompt for an address, but do not require one|Do not prompt for an address|Prompt for an address, and require one</optionDescription>
  		<controlType>3</controlType>
  		<ControlWidth>155</ControlWidth>
  		<value>**N/A**</value>
  		
  		<processingCode><![CDATA[
  		
  		Dim Name As String
  		Dim Value As String
  		Dim rowText As String
  		Dim sResult As String
  		
  		name=Input("dictVariableName")
		value=Input("dictVariableValue")
		rowText=Input("dictcode")
  		
Select Case Value
Case "Prompt for an address, but do not require one"
  	sResult = "0"
Case "Do not prompt for an address"
	sResult = "1"
Case "prompt for an address, and require one"

	sResult = "2"
End Select

if sResult.lenb > 0 then
 print rowText.ReplaceAll("{!-"+name+"-!}","<input type=""hidden"" name=""no_shipping"" value="""+sResult+""">")
else
 print rowText.replaceall("{!-"+name+"-!}","")
end
	
  		]]></processingCode>  
  	</option>
  	
  	<option>
  		<optionName>plppTaxRate</optionName>
  		<displayName>Tax Rate (%)</displayName>
  		<defaultValue></defaultValue>
  		<optionDescription></optionDescription>
  		<controlType>1</controlType>
  		<ControlWidth>80</ControlWidth>
  		<value>**N/A**</value>  		
  	</option>
  	
  	<option>
  		<optionName>plppProductWeight</optionName>
  		<displayName>Weight</displayName>
  		<defaultValue></defaultValue>
  		<optionDescription></optionDescription>
  		<controlType>1</controlType>
  		<ControlWidth>80</ControlWidth>
  		<value>**N/A**</value>  		
  	</option>
  	
  	<option>
  		<optionName>plppProductWeightMes</optionName>
  		<displayName>Measurement</displayName>
  		<defaultValue>lbs</defaultValue>
  		<optionDescription>lbs|kgs</optionDescription>
  		<controlType>3</controlType>
  		<ControlWidth>155</ControlWidth>
  		<value>**N/A**</value>
  		
  	</option>

  	<option>
  		<optionName>plppOpenInNewWindow</optionName>
  		<displayName>Open shopping cart in new tab</displayName>
  		<defaultValue>FALSE</defaultValue>
  		<optionDescription>Open the shopping cart in a browser tab or window</optionDescription>
  		<controlType>4</controlType>
  		<ControlWidth>200</ControlWidth>
  		<value>**N/A**</value>
  	</option>
  	
  	
  
  	
  	
  	
  	<option>
  		<optionName>plppProductOptionSpecifyQuantity</optionName>
  		<displayName>Show quantity field</displayName>
  		<defaultValue>FALSE</defaultValue>
  		<optionDescription>Let the customer specify the quantity</optionDescription>
  		<controlType>4</controlType>
  		<ControlWidth>200</ControlWidth>
  		<value>**N/A**</value> 
  		 <Event_Action><![CDATA[
  		 
  		 Dim bValue As String = Input("$value")
  		 
  		 if bValue = "TRUE" then
  		 	SetControlEnable("plppProductOptionQuantityFieldName", TRUE)
  		 else 
  		 	SetControlEnable("plppProductOptionQuantityFieldName", FALSE)
  		 end
  		 
  		 ]]></Event_Action>
  				
  	</option>
  	
  	 
  	
  	<option>
  		<optionName>plppProductOptionQuantityFieldName</optionName>
  		<displayName>Quantity Label:</displayName>
  		<defaultValue>Quantity:</defaultValue>
  		<optionDescription>Let the customer specify the quantity</optionDescription>
  		<controlType>1</controlType>
  		<ControlWidth>155</ControlWidth>
  		<value>**N/A**</value>  
  		
  		<Event_Open><![CDATA[
  		 
  		 Dim bValue As String = GetControlPropertyValue("plppProductOptionSpecifyQuantity","value")
  		 
  		 if bValue = "TRUE" then
  		 	SetControlEnable("plppProductOptionQuantityFieldName", TRUE)
  		 else 
  		 	SetControlEnable("plppProductOptionQuantityFieldName", FALSE)
  		 end
  		 
  		 ]]></Event_Open>		
  	</option>
  	<option>
  		<optionName>plppFormAlignment</optionName>
  		<displayName>Form Alignment:</displayName>
  		<defaultValue>Left</defaultValue>
  		<optionDescription>Left|Right|Center</optionDescription>
  		<controlType>3</controlType>
  		<ControlWidth>140</ControlWidth>
  		<value>**N/A**</value>
  	</option>
  	
  	
  		 <option>
			  <displayName>Sep</displayName>
			  <optionName>plppProductOptionSeperator</optionName>
			  <defaultValue></defaultValue>
			  <optionDescription>Separator</optionDescription>
			  <controlType>12</controlType>
			  
	</option>
	
	 <option>
			  <displayName>Product Options</displayName>
			  <optionName>plppProductOptionSectionLabel</optionName>
			  <defaultValue></defaultValue>
			  <controlType>7</controlType>
			  <controlWidth>200</controlWidth>
			  <isBold>TRUE</isBold>
			  <value><![CDATA[Product Options]]></value>
  			<defaultValue><![CDATA[Product Options]]></defaultValue>
	</option>

  	
  	<option>
  		<optionName>plppProductOptionPriceLabel</optionName>
  		<displayName>Option Label:</displayName>
  		<defaultValue>Options</defaultValue>
  		<optionDescription></optionDescription>
  		<controlType>1</controlType>
  		<ControlWidth>155</ControlWidth>
  		<value>**N/A**</value>  		
  	</option>
  	
  





  	
  	<option>
			  <displayName>Product Options/Prices</displayName>
			  <optionName>plppProductOptionsPrices</optionName>
			  <defaultValue></defaultValue>
			  <optionDescription>Specify additional products options with pricing</optionDescription>
			  <controlType>10</controlType>
			  <ControlWidth>250</ControlWidth>
			  <Event_Open><![CDATA[
			  //open event code, let's set some properties
			  	SetControlPropertyValue("plppProductOptionsPrices","columncount","2")
			  	SetControlPropertyValue("plppProductOptionsPrices","columnwidths","185,*")
			 	SetControlPropertyValue("plppProductOptionsPrices","defaultRowheight","23")
			 	SetControlPropertyValue("plppProductOptionsPrices","textFont","smallsystem")
			 	SetControlPropertyValue("plppProductOptionsPrices","EnableDragReorder","TRUE")
			 	
			 	CallControlMethod("plppProductOptionsPrices","ColumnType(0)= 3")
			 	CallControlMethod("plppProductOptionsPrices","ColumnType(1)= 3")
			 	
			 	//set the left of the add button
			 	 SetControlPropertyValue("plppAddProductOption","left","185")
			 	 
			 	
			 	Dim bValue As String = GetControlPropertyValue("plppGlobalShipping","value")
			 	
  		 
				
		 
				 if bValue = "FALSE" then
					SetControlEnable("plppShipping", TRUE)
				 else 
					SetControlEnable("plppShipping", FALSE)
				 end
  		 
  		  bValue = GetControlPropertyValue("plppUseCustomImage","value")
  		 
  		 if bValue = "TRUE" then
  		 	SetControlEnable("plppCustomButtonImage", TRUE)
  		 	SetControlEnable("plppCustomButtonImageWidth", TRUE)
  		 	SetControlEnable("plppCustomButtonImageheight", TRUE)
  		 else 
  		 	SetControlEnable("plppCustomButtonImage", FALSE)
  		 	SetControlEnable("plppCustomButtonImageWidth", FALSE)
  		 	SetControlEnable("plppCustomButtonImageheight", FALSE)
  		 end

			 	
			  ]]></Event_Open>
			  <Event_KeyDown><![CDATA[
			  	//delete items with the delete key
			  	dim sKey as string = Input("$Key")
			  	if sKey = chr(8) then
			  	
			  		CallControlMethod("plppProductOptionsPrices","RemoveSelectedRows")
			  		ApplySettingsToShape()
			  	end
			 	
			  ]]></Event_KeyDown>
			  
			  
			  <processingCode><![CDATA[
			
Dim i as integer
dim Value, name As String 
Dim sResult As String
Dim sOptionName As String
Dim sOptionNameVar,sOptionValueVar As String
Dim iListOptionCount As Integer
Dim sListContents(-1) As String
Dim rowText As String
dim sOptionLabel As String
name=Input("dictVariableName")
value=Input("dictVariableValue")
rowText=Input("dictcode")


//get our list of options
sListContents = XSListboxGetAllRows(value,-1,FALSE,FALSE)


iListOptionCount = sListContents.ubound

//include an options with price
if iListOptionCount > -1 then

//get our option name
sOptionLabel = Input("&plppProductOptionPriceLabel")

sResult = sResult + "<input type=""hidden"" name=""on0"" value="""+sOptionLabel+""">"+sOptionLabel+"<br />"
sResult = sResult + "<select name=""os0"">"
For i = 0 to iListOptionCount
	sOptionName = sListContents(i)
	
	if sOptionName.Lenb > 3 then
		sOptionName = sOptionName.Replace("*,*"," - ")
		sOptionNameVar = sListContents(i).NthField("*,*",1)
		sOptionNameVar = sOptionNameVar.ReplaceAll(" ","-")
		sResult = sResult + " <option value="""+sOptionNameVar+""">" + sOptionName + "</option>"
	End

next

sResult = sResult + "</select>"



sResult = sResult + "<br />"
sResult = sResult + "<input type=""hidden"" name=""option_index"" value=""0"">"
For i = 0 to iListOptionCount

	sOptionNameVar = sListContents(i).NthField("*,*",1)
	sOptionNameVar = sOptionNameVar.ReplaceAll(" ","-")
	
	sOptionValueVar = sListContents(i).NthField("*,*",2)
	//should remove anything that is not a number,comma or period
	sOptionValueVar = XSRemoveNot(sOptionValueVar,"0123456789.,")

	
	sResult = sResult + "<input type=""hidden"" name=""option_select" + Str(i)+""" value="""+sOptionNameVar+""">"
	sResult = sResult + "<input type=""hidden"" name=""option_amount" + str(i)+""" value="""+sOptionValueVar+""">"

next
sResult = sResult + "<br />"
end


rowtext = rowText.replaceall("{!-"+name+"-!}",sResult)

print rowText


			]]></processingCode>  
			  
			  
		</option>
		
		
		  <option>
			  <displayName>Add</displayName>
			  <optionName>plppAddProductOptionPrices</optionName>
			  <defaultValue></defaultValue>
			  <optionDescription>Add a new product</optionDescription>
			  <controlType>11</controlType>
			  
			  <Event_Action><![CDATA[
	
			 CallControlMethod("plppProductOptionsPrices","addrow("""")")
			 CallControlMethod("plppProductOptionsPrices","cell(lastindex,0) = ""New Option "" + Str(listcount)")
			CallControlMethod("plppProductOptionsPrices","cell(lastindex,1) = ""0.00""")
			CallControlMethod("plppProductOptionsPrices","EditCell(lastindex,0)")
			ApplySettingsToShape()
			
			 // print propValue
			  ]]></Event_Action>
	</option>
	

<option>
  		<optionName>plppProductOptionLabel</optionName>
  		<displayName>Option Label:</displayName>
  		<defaultValue>Options</defaultValue>
  		<optionDescription></optionDescription>
  		<controlType>1</controlType>
  		<ControlWidth>155</ControlWidth>
  		<value>**N/A**</value>  		
  	</option>

  	
  	<option>
			  <displayName>Product Options</displayName>
			  <optionName>plppProductOptions</optionName>
			  <defaultValue></defaultValue>
			  <optionDescription>Specify product options</optionDescription>
			  <controlType>10</controlType>
			  <ControlWidth>250</ControlWidth>
			  <Event_Open><![CDATA[
			  //open event code, let's set some properties
			  	
			 	SetControlPropertyValue("plppProductOptions","defaultRowheight","23")
			 	SetControlPropertyValue("plppProductOptions","textFont","smallsystem")
			 	SetControlPropertyValue("plppProductOptions","EnableDragReorder","TRUE")
			 	
			 	CallControlMethod("plppProductOptions","ColumnType(0)= 3")
			 	
			 	
			 	//set the left of the add button
			 	 SetControlPropertyValue("plppAddProductOptionPrices","left","185")
			 	
			  ]]></Event_Open>
			  <Event_KeyDown><![CDATA[
			  	//delete items with the delete key
			  	dim sKey as string = Input("$Key")
			  	if sKey = chr(8) then
			  	
			  		CallControlMethod("plppProductOptions","RemoveSelectedRows")
			  		ApplySettingsToShape()
			  	end
			 	
			  ]]></Event_KeyDown>
			  
			  
			  <processingCode><![CDATA[
			
Dim i as integer
dim Value, name As String 
Dim sResult As String
Dim sOptionName As String
Dim sOptionNameVar,sOptionValueVar As String
Dim iListOptionCount As Integer
Dim sListContents(-1) As String
Dim rowText As String
dim sOptionLabel As String
name=Input("dictVariableName")
value=Input("dictVariableValue")
rowText=Input("dictcode")


//get our list of options
sListContents = XSListboxGetAllRows(value,0,FALSE,FALSE)


iListOptionCount = sListContents.ubound

//include an options with price
if iListOptionCount > -1 then

//get our option name
sOptionLabel = Input("&plppProductOptionLabel")

sResult = sResult + "<input type=""hidden"" name=""on1"" value="""+sOptionLabel+""">"+sOptionLabel+"<br />"
sResult = sResult + "<select name=""os1"">"
For i = 0 to iListOptionCount
	sOptionName = sListContents(i)
	sOptionName = sOptionName.Replace("*,*"," - ")
	
	if sOptionName.Lenb > 0 then//dont show blank fields
		sOptionNameVar = sListContents(i).NthField("*,*",1)
		sOptionNameVar = sOptionNameVar.ReplaceAll(" ","-")
		sResult = sResult + " <option value="""+sOptionNameVar+""">" + sOptionName + "</option>"
	End

next

sResult = sResult + "</select>"

sResult = sResult + "<br />"
sResult = sResult + "<br />"
end


rowtext = rowText.replaceall("{!-"+name+"-!}",sResult)

print rowText


			]]></processingCode>  
			  
			  
		</option>
		
		
		  <option>
			  <displayName>Add</displayName>
			  <optionName>plppAddProductOption</optionName>
			  <defaultValue></defaultValue>
			  <optionDescription>Add a new product</optionDescription>
			  <controlType>11</controlType>
			  <Event_Action><![CDATA[
	
			 CallControlMethod("plppProductOptions","addrow("""")")
			 CallControlMethod("plppProductOptions","cell(lastindex,0) = ""New Option "" + Str(listcount)")

			CallControlMethod("plppProductOptions","EditCell(lastindex,0)")
			ApplySettingsToShape()

			  ]]></Event_Action>
	</option>


  	
  	
  	
  	 <option>
			  <displayName>Sep</displayName>
			  <optionName>plppCustomButtonsSeperator</optionName>
			  <defaultValue></defaultValue>
			  <controlType>12</controlType>
			  
	</option>
	
	 <option>
			  <displayName>Custom Pay Button</displayName>
			  <optionName>plppCustomButtonSectionLabel</optionName>
			  <defaultValue></defaultValue>
			  <controlType>7</controlType>
			  <controlWidth>200</controlWidth>
			  <isBold>TRUE</isBold>
			  <value><![CDATA[Custom Pay Button]]></value>
  			<defaultValue><![CDATA[Custom Pay Button]]></defaultValue>
	</option>
  	
  	
  	<option>
  		<optionName>plppUseCustomImage</optionName>
  		<displayName>Use Custom Pay Button Image</displayName>
  		<defaultValue>FALSE</defaultValue>
  		<optionDescription>Use a custom image for your buttons</optionDescription>
  		<controlType>4</controlType>
  		<ControlWidth>200</ControlWidth>
  		<value>**N/A**</value>
  		<Event_Action><![CDATA[
  		Dim bValue As String = Input("$value")
  		 
  		 if bValue = "TRUE" then
  		 	SetControlEnable("plppCustomButtonImage", TRUE)
  		 	SetControlEnable("plppCustomButtonImageWidth", TRUE)
  		 	SetControlEnable("plppCustomButtonImageheight", TRUE)
  		 else 
  		 	SetControlEnable("plppCustomButtonImage", FALSE)
  		 	SetControlEnable("plppCustomButtonImageWidth", FALSE)
  		 	SetControlEnable("plppCustomButtonImageheight", FALSE)
  		 end
  		 ]]></Event_Action>
  	</option>
  	
  	<option>
    	<displayName>Custom Image:</displayName>
  
    	<optionName>plppCustomButtonImage</optionName>
    	<ControlWidth>250</ControlWidth>
    	<defaultValue></defaultValue>
    	<OnNewLine>TRUE</OnNewLine>
    	<optionDescription>Custom Image</optionDescription>
    	<resourceFilter>1</resourceFilter>
    	<controlType>9</controlType>
    	<Value>**N/A**</Value>
    	<Event_Action><![CDATA[
    	//calculate the image dimensions automatically
  		 dim assetId as string = Input("$assetId")
  		Dim intWidth As Double
  		Dim intHeight As Double
  		Dim strDimensions As String = XSGetImageDimensions(assetId)
  		intWidth = val(NthField(strDimensions," ", 1))
  		intHeight = Val(NthField(strDimensions," ", 2))
  		 Dim strWidth As String = str(intWidth)
  		 Dim strHeight As String = str(intHeight)
  		 SetControlPropertyValue("plppCustomButtonImageWidth","text",strWidth)
  		 SetControlPropertyValue("plppCustomButtonImageheight","text",strHeight)
  		 
  
  		 ]]></Event_Action>
    
    </option>
    
    <option>
    	<displayName>Width:</displayName>
  
    	<optionName>plppCustomButtonImageWidth</optionName>
    	<ControlWidth>100</ControlWidth>
    	<defaultValue></defaultValue>
    	<defaultValue>100%</defaultValue>
		<minValue>0</minValue>
    	<controlType>1</controlType>
    	<Value>**N/A**</Value>
    	    	 <processingCode><![CDATA[
Dim i as integer
dim Value, name As String 
Dim rowText As String
name=Input("dictVariableName")
value=Input("dictVariableValue")
rowText=Input("dictcode")

//check to make sure we have a value and return a full URL
if value.lenb > 0 then
	

	rowText = rowText.replaceall("{!-"+name+"-!}", value)
	
	print rowText
else
	//no page selected
	print rowText.replaceall("{!-"+name+"-!}","")
end

			  ]]></processingCode>
    
    
    </option>
    
    <option>
    	<displayName>Height:</displayName>
  
    	<optionName>plppCustomButtonImageheight</optionName>
    	<ControlWidth>100</ControlWidth>
    	<defaultValue>100%</defaultValue>
    	<defaultValue></defaultValue>
		<minValue>0</minValue>
    	<controlType>1</controlType>
    	<Value>**N/A**</Value>
    	
    	 <processingCode><![CDATA[
Dim i as integer
dim Value, name As String 
Dim rowText As String
name=Input("dictVariableName")
value=Input("dictVariableValue")
rowText=Input("dictcode")

//check to make sure we have a value and return a full URL
if value.lenb > 0 then
	

	rowText = rowText.replaceall("{!-"+name+"-!}", value)
	
	print rowText
else
	//no page selected
	print rowText.replaceall("{!-"+name+"-!}","")
end

			  ]]></processingCode>
    
    </option>

 	<option>
			  <displayName>Sep</displayName>
			  <optionName>plppAdditionalOptionsSeperator</optionName>
			  <defaultValue></defaultValue>
			  <controlType>12</controlType>
			  
	</option>
	
	 <option>
			  <displayName>Additional Options</displayName>
			  <optionName>plppAdditionalOptionsSectionLabel</optionName>
			  <defaultValue></defaultValue>
			  <controlType>7</controlType>
			  <controlWidth>200</controlWidth>
			  <isBold>TRUE</isBold>
			  <value><![CDATA[Additional Options]]></value>
  			<defaultValue><![CDATA[Additional Options]]></defaultValue>
	</option>
	
	<option>
			  <displayName>Thank You Page:</displayName>
			  <optionName>plppPageThankYouReturn</optionName>
			  <defaultValue></defaultValue>
			  <controlType>13</controlType>
			
			  <value>**N/A**</value>
			  
			   <processingCode><![CDATA[
Dim i as integer
dim Value, name As String 
Dim rowText As String
name=Input("dictVariableName")
value=Input("dictVariableValue")
rowText=Input("dictcode")

//check to make sure we have a value and return a full URL
if value.lenb > 0 then
	value = XSGetFullURLFromUUID(value)

	rowText = rowText.replaceall("{!-"+name+"-!}", "<input type=""hidden"" name=""return"" value="""+value+""">")
	
	print rowText
else
	//no page selected
	print rowText.replaceall("{!-"+name+"-!}","")
end

			  ]]></processingCode>
			  
  			
	</option>
	<option>
			  <displayName>Cancelled Page:</displayName>
			  <optionName>plppPageCancelReturn</optionName>
			  <defaultValue></defaultValue>
			  <controlType>13</controlType>
			 <processingCode><![CDATA[
Dim i as integer
dim Value, name As String 
Dim rowText As String
name=Input("dictVariableName")
value=Input("dictVariableValue")
rowText=Input("dictcode")

//check to make sure we have a value and return a full URL
if value.lenb > 0 then
	value = XSGetFullURLFromUUID(value)
	rowText = rowText.replaceall("{!-"+name+"-!}", "<input type=""hidden"" name=""cancel_return"" value="""+value+""">")
	
	print rowText
else
	//no page selected
	print rowText.replaceall("{!-"+name+"-!}","")
end

			  ]]></processingCode>
			  <value>**N/A**</value>
			   
  			
	</option>

	<option>
			  <displayName>Sep</displayName>
			  <optionName>plppProductInfoSeperator</optionName>
			  <defaultValue></defaultValue>
			  <controlType>12</controlType>
			  
	</option>
	
	 <option>
			  <displayName>Additional Options</displayName>
			  <optionName>plppProductInfoSeperatorLabel</optionName>
			  <defaultValue></defaultValue>
			  <controlType>7</controlType>
			  <controlWidth>200</controlWidth>
			  <isBold>TRUE</isBold>
			  <value><![CDATA[Product Info]]></value>
  			<defaultValue><![CDATA[Product Info]]></defaultValue>
	</option>
	
	<option>
  		<optionName>plppUseCustomProductImage</optionName>
  		<displayName>Use Product Image</displayName>
  		<defaultValue>FALSE</defaultValue>
  		<optionDescription>Add a product image</optionDescription>
  		<controlType>4</controlType>
  		<ControlWidth>200</ControlWidth>
  		<value>**N/A**</value>
  		<Event_Action><![CDATA[
  		Dim bValue As String = Input("$value")
  		 
  		 if bValue = "TRUE" then
  		 	SetControlEnable("plppImageFileUUID", TRUE)

  		 else 
  		 	SetControlEnable("plppImageFileUUID", FALSE)

  		 end
  		 ]]></Event_Action>
  	</option>
	
	 <option>
    <displayName>Image File</displayName>
    <isBold>TRUE</isBold>
    <optionName>plppImageFileUUID</optionName>
   <resourceFilter>1</resourceFilter>
    <ControlWidth>250</ControlWidth>
    <defaultValue></defaultValue>
    <OnNewLine>TRUE</OnNewLine>
    <optionDescription>Image File</optionDescription>
    <controlType>9</controlType>
    <Value>**N/A**</Value>
    
    </option>
    
    
    <option>
  		<optionName>plppUseCustomProductDescription</optionName>
  		<displayName>Use Product Description</displayName>
  		<defaultValue>FALSE</defaultValue>
  		<optionDescription>Add a product description</optionDescription>
  		<controlType>4</controlType>
  		<ControlWidth>200</ControlWidth>
  		<value>**N/A**</value>
  		<Event_Action><![CDATA[
  		Dim bValue As String = Input("$value")
  		 
  		 if bValue = "TRUE" then
  		 	SetControlEnable("plppProductDescription", TRUE)

  		 else 
  		 	SetControlEnable("plppProductDescription", FALSE)

  		 end
  		 ]]></Event_Action>
  	</option>
  	
     <option>
    <displayName>Product Description</displayName>
    <optionName>plppProductDescription</optionName>
    <ControlWidth>250</ControlWidth>
    <defaultValue></defaultValue>
    <OnNewLine>TRUE</OnNewLine>
    <optionDescription>Enter Text...</optionDescription>
    <controlType>16</controlType>
     <labelWidth>200</labelWidth>
    <textFieldMaxLength>0</textFieldMaxLength>
     <height>300</height>
     <styleControls>TextFont,TextColors,TextStyle,Align,Links,Lists,RemoveFormating</styleControls>
    <Value>**N/A**</Value>

    </option>
		

<windowOption>
  <help>
  <videoURL>
  https://www.youtube.com/embed/Bavs0DxB5tQ?rel=0
  </videoURL>
  </help>
  
  </windowOption>

</options>


</widget>